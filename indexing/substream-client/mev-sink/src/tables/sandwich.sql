CREATE TABLE IF NOT EXISTS default.sandwiches
(
    `frontrun_tx_id` String,
    `slot`             UInt64,
    `frontrun_swaps`   Nested(`block_slot` UInt64,
                           `tx_id` String,
                           `signer` String,
                           `pool_address` String,
                           `token_in` String,
                           `token_out` String,
                           `amount_in` Float64,
                           `amount_out` Float64,
                           `tx_fee` UInt64,
                           `multi_location` String,
                           `instruction_index` UInt32,
                           `is_inner_instruction` bool,
                           `inner_instruction_index` UInt32,
                           `transaction_index` UInt32,
                           `inner_program` String,
                           `outer_program` String,
                           `priority_fee` UInt64,
                           `block_date` String),

    `victim_swaps`     Nested(`block_slot` UInt64,
                           `tx_id` String,
                           `signer` String,
                           `pool_address` String,
                           `token_in` String,
                           `token_out` String,
                           `amount_in` Float64,
                           `amount_out` Float64,
                           `tx_fee` UInt64,
                           `multi_location` String,
                           `instruction_index` UInt32,
                           `is_inner_instruction` bool,
                           `inner_instruction_index` UInt32,
                           `transaction_index` UInt32,
                           `inner_program` String,
                           `outer_program` String,
                           `priority_fee` UInt64,
                           `block_date` String),
    `backrun_tx_id`  String,
    `backrun_swaps`    Nested(`block_slot` UInt64,
                           `tx_id` String,
                           `signer` String,
                           `pool_address` String,
                           `token_in` String,
                           `token_out` String,
                           `amount_in` Float64,
                           `amount_out` Float64,
                           `tx_fee` UInt64,
                           `multi_location` String,
                           `instruction_index` UInt32,
                           `is_inner_instruction` bool,
                           `inner_instruction_index` UInt32,
                           `transaction_index` UInt32,
                           `inner_program` String,
                           `outer_program` String,
                           `priority_fee` UInt64,
                           `block_date` String)
)
    ENGINE = MergeTree()
        PRIMARY KEY (`slot`, `backrun_tx_id`)
        ORDER BY (`slot`, `backrun_tx_id`)